#BlueJ class context
comment0.params=name\ model\ year\ colours\ cost
comment0.target=Vehicle(java.lang.String,\ java.lang.String,\ int,\ int,\ double)
comment0.text=\r\n\ Constructor\ \#1\ -\ initialize\ class\ variables\ through\ formal\ parameter\r\n
comment1.params=name\ model\ quantity\ cost\ colours\ regNum
comment1.target=Vehicle(java.lang.String,\ java.lang.String,\ int,\ double,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ \#2\ -\ initialize\ class\ variables\ through\ formal\ parameter\r\n
comment2.params=colours
comment2.target=void\ setColour(int)
comment2.text=\r\n\ choose\ to\ vehicle\ colour\r\n\ @param\ colours\ colours\ to\ select\r\n\ @return\ void\r\n
comment3.params=year
comment3.target=void\ setYear(int)
comment3.text=\r\n\ choose\ to\ which\ year\ required\r\n\ @param\ year\ year\ of\ the\ vehicle\r\n\ @return\ void\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment4.text=\r\n\ show\ the\ vehicle\ name\ \r\n\ @param\ none\r\n\ @return\ name\ of\ vehicle\r\n
comment5.params=
comment5.target=double\ getSellingPrice()
comment5.text=\r\n\ show\ selling\ price\ of\ vehicle\r\n\ @param\ none\r\n\ @return\ the\ selling\ price\r\n
comment6.params=markup
comment6.target=double\ calSellingPrice(int)
comment6.text=\r\n\ calculate\ the\ selling\ price\ of\ the\ vehicle\r\n\ @param\ markup\ markup/profit\ on\ the\ vehicle\ \r\n\ @return\ the\ selling\ price\r\n
comment7.params=amt
comment7.target=int\ updateQuantity(int)
comment7.text=\r\n\ update\ the\ remaining\ quantity\ after\ sale,\ and\ the\ amount\ sold\r\n\ @param\ amt\ the\ number\ of\ vehicles\ sold\r\n\ @return\ the\ amount\ sold\ if\ anny\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ display\ the\ data\ held\ on\ vehicle\r\n\ @param\ none\r\n\ @return\ the\ data\ on\ vehicle\r\n
numComments=9
